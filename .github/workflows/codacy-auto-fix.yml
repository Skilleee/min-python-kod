name: Codacy Auto-Fix

on: [push, pull_request]

jobs:
  auto_fix:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          token: ${{ secrets.GH_PAT }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Verify repository contents
        run: ls -la

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install black isort autoflake flake8 pylint
          pip install pandas numpy scikit-learn tensorflow requests textblob gspread oauth2client yfinance \
                     matplotlib seaborn fpdf psutil dotenv gym stable_baselines3 scipy schedule

      - name: Auto-format code with Black and Isort
        run: |
          black .
          isort .

      - name: Remove unused imports with Autoflake
        run: autoflake --in-place --remove-all-unused-imports --recursive .

      - name: Lint with Flake8
        run: flake8 . --max-line-length=120 --ignore=F541,F401,W503 || true

      - name: Lint with Pylint
        run: pylint --disable=C,R,W . || true

      - name: Configure Git
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Prevent infinite loop
        run: |
          if git log -1 --pretty=%B | grep -q "Auto-fix"; then
            echo "Skipping auto-fix commit to prevent loop"
            exit 0
          fi

      - name: Authenticate GitHub
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Auto-format and commit if changes exist
        if: github.ref == 'refs/heads/main'
        run: |
          git add .
          if ! git diff --cached --exit-code; then
            git commit -m "Auto-fix: formatted code using Black, Isort, Autoflake, Flake8 & Pylint"
            git push origin HEAD:main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
